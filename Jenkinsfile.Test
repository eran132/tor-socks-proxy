pipeline {
    agent any
    stages {
        stage ('Pull Image Built in Upstream job') {
            steps {
                script {
                    dockerImage.pull()
                }
            }
        }
        // stage("Gather Deployment Parameters") {
        //     steps {
        //         timeout(time: 30, unit: 'SECONDS') {
        //             script {
        //                 withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'dockerhub-eran',
        //                     usernameVariable: 'DOCKERHUB_USER', passwordVariable: 'DOCKERHUB_PASSWORD']]) {
        //                     def getDockerImages() {

        //                         def token = ['bash', '-c', "curl -s -H \"Content-Type: application/json\" -X POST -d '{\"username\": ${DOCKERHUB_USER}, \"password\": ${DOCKERHUB_PASSWORD}}' https://hub.docker.com/v2/users/login/ | jq -r .token"]
        //                         def cmd = [ 'bash', '-c', "curl -s -H \"Authorization: JWT ${token}\" https://hub.docker.com/v2/repositories/eran/tor-socks-proxy/tags/?page_size=10000 | jq -r '.results|.[]|.name'"]
        //                         def result = cmd.execute().text

        //                         def slurper = new JsonSlurper()
        //                         def json = slurper.parseText(result)
        //                         def tags = new ArrayList()
        //                         if (json.tags == null || json.tags.size == 0)
        //                         tags.add("unable to fetch tags for ${APP_NAME}")
        //                         else
        //                         tags.addAll(json.tags)
        //                         return tags.join('\n')
        //                         // Show the select input modal
        //                         def INPUT_PARAMS = input message: 'Please Provide Parameters', ok: 'Next',
        //                             parameters: [
        //                                 choice(name: 'IMAGE_TAG', choices: getDockerImages(), 
        //                                     description: 'Available Docker Images')]
        //                         env.IMAGE_TAG = INPUT_PARAMS.IMAGE_TAG
        //                     }
        //                 }
        //             }
        //         }
        //     }
        // }
        // stage("Use Deployment Parameters") {
        //  steps {
        //         script {
        //             echo "All parameters have been set as Environment Variables"
        //             echo "Selected Environment: ${env.ENVIRONMENT}"
        //             echo "Selected Tag: ${env.IMAGE_TAG}"
        //         }
        //  }
        // }
    }
}