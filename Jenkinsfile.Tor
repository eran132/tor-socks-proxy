pipeline {
    agent any
    environment {
        registry = "eran/tor-socks-proxy"
        registryCredential = 'dockerhub-eran'
        dockerImage = ''
    }
    stages {
        // stage('clone Code from GitHub') {
        //     steps {
        //         cleanWs()
        //         checkout([$class: 'GitSCM', branches: [[name: '**/tags/*']],
        //         doGenerateSubmoduleConfigurations: false,
        //         extensions: [], submoduleCfg: [],
        //         userRemoteConfigs: [[credentialsId: 'eran-jenkins', refspec: '+refs/tags/*:refs/remotes/origin/tags/*',
        //         url: 'git@github.com:eran132/tor-socks-proxy.git']]])
        //     }
        // }
        // stage ('git clone repo') {
        //     steps {
        //         sh "git clone git@github.com:eran132/tor-socks-proxy.git"
        //     }
        // }
        stage ('Build for Release') {
            when {
                branch 'release'
            }
            steps {
                script {
                    dockerImage = docker.build("eran/tor-socks-proxy:${env.BUILD_ID}_${env.BRANCH_NAME}", "--build-arg PORT=7293 -f Dockerfile .")
                }
            }
        }
        stage ('Build for develop') {
            when {
                branch 'develop'
            }
            steps {
                script {
                    dockerImage = docker.build("eran/tor-socks-proxy:${env.BUILD_ID}_${env.BRANCH_NAME}", "--build-arg PORT=5234 -f Dockerfile .")
                }
            }
        }
        stage ('Deploy Image') {
            steps{
                script {
                    docker.withRegistry( '', registryCredential ) {
                        dockerImage.push()
                    }
                }
            }
        }
        // stage('build the Docker image') {
        //     steps {
        //         script {
        //             sh 'echo "kuku"'
        //             docker.build("test:${env.BUILD_ID}")
        //         }
        //     }    
        // }
    }
}